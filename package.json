{
  "name": "bat-ledger",
  "version": "0.9.0",
  "description": "A BAT micropayments system for users and publishers.",
  "main": "index.js",
  "scripts": {
    "ava": "ava",
    "balance-server": "NODE_PATH=dist node --optimize_for_size --max_old_space_size=460 --gc_interval=100 dist/balance/server.js",
    "build": "npm run build-utils && npm run build-ledger && npm run build-eyeshade && npm run build-balance && cp config.js dist/config.js",
    "build-balance": "babel balance --ignore **/*.test.js -d dist/balance",
    "build-eyeshade": "babel eyeshade --ignore **/*.test.js -d dist/eyeshade && cp -R eyeshade/migrations/* dist/eyeshade/migrations/",
    "build-ledger": "babel ledger --ignore **/*.test.js -d dist/ledger",
    "build-utils": "babel bat-utils --ignore **/*.test.js -d dist/bat-utils && cp bat-utils/package.json dist/bat-utils/package.json",
    "eyeshade-server": "NODE_PATH=dist node --optimize_for_size --max_old_space_size=460 --gc_interval=100 dist/eyeshade/server.js",
    "eyeshade-worker": "NODE_PATH=dist node --optimize_for_size --max_old_space_size=460 --gc_interval=100 dist/eyeshade/worker.js",
    "eyeshade-consumer": "NODE_PATH=dist node --optimize_for_size --max_old_space_size=460 --gc_interval=100 dist/eyeshade/consumer.js",
    "heroku-postbuild": "npm run build",
    "ledger-server": "NODE_PATH=dist node --optimize_for_size --max_old_space_size=460 --gc_interval=100 dist/ledger/server.js",
    "ledger-worker": "NODE_PATH=dist node --optimize_for_size --max_old_space_size=460 --gc_interval=100 dist/ledger/worker.js",
    "start": "echo use 'npm run start-[ledger|eyeshade|balance]' or 'npm run start-[ledger|eyeshade]-worker'",
    "start-balance": "NODE_PATH=. DEBUG=*,-babel*,-mongo:*,mongo:queries SERVICE=balance ./node_modules/.bin/babel-node balance/server.js",
    "start-eyeshade": "NODE_PATH=. DEBUG=*,-babel*,-mongo:*,mongo:queries SERVICE=eyeshade ./node_modules/.bin/babel-node eyeshade/server.js",
    "start-eyeshade-worker": "NODE_PATH=. DEBUG=*,-babel*,-mongo:*,mongo:queries SERVICE=eyeshade ./node_modules/.bin/babel-node --optimize_for_size --max_old_space_size=460 --gc_interval=100 eyeshade/worker.js",
    "start-eyeshade-consumer": "NODE_PATH=. DEBUG=*,-babel*,-mongo:*,mongo:queries SERVICE=eyeshade ./node_modules/.bin/babel-node --optimize_for_size --max_old_space_size=460 --gc_interval=100 eyeshade/consumer.js",
    "start-ledger": "NODE_PATH=. DEBUG=*,-babel*,-mongo:*,mongo:queries SERVICE=ledger ./node_modules/.bin/babel-node ledger/server.js",
    "start-ledger-worker": "NODE_PATH=. DEBUG=*,-babel*,-mongo:*,mongo:queries SERVICE=ledger ./node_modules/.bin/babel-node --optimize_for_size --max_old_space_size=460 --gc_interval=100 ledger/worker.js",
    "test": "nyc --reporter=html --reporter=text npm run test-all",
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "test-all": "npm run test-isup && npm run test-unit && npm run test-integration && npm run test-e2e",
    "test-isup": "ava -v -s test/isup.integration.test.js",
    "docker-test": "docker-compose run --rm -v $(pwd)/test:/usr/src/app/test ledger-web npm run test",
    "mongo-reset": "docker exec -it ledger-mongo mongo eyeshade --eval \"db.dropDatabase()\" && docker exec -it ledger-mongo mongo ledger --eval \"db.dropDatabase()\"",
    "lint": "standard",
    "lint-fix": "npm run lint -- --fix",
    "security": "npm run lint && npm audit",
    "test-integration": "ava -v -s test/*/*.integration.test.js",
    "test-e2e": "ava -v test/e2e.integration.test.js",
    "test-grant": "ava -v -s test/ledger/grants.integration.test.js",
    "test-suggestions": "ava -v -s test/eyeshade/suggestions.integration.test.js",
    "test-unit": "ava -v -s bat-utils/**/*.test.js ledger/**/*.test.js",
    "docker-reset": "docker-compose down && docker rmi $(docker images -a -q) --force",
    "docker-build": "docker-compose build",
    "docker-seed-eyeshade": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml run --rm -w /usr/src/app/eyeshade eyeshade-worker bash ./bin/seed.sh",
    "docker-up-pg-grants": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml run grant-web echo '';",
    "docker-up-pg-challenge": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml run challenge-bypass echo '';",
    "docker-up": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up $npm_package_config_dockerservices",
    "docker-up-dev": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up $npm_package_config_dockerservices $npm_package_config_dockermonitors",
    "docker-up-detached": "docker-compose up -d $npm_package_config_dockerservices",
    "docker-migrate-eyeshade-up": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml run --rm -w /usr/src/app/eyeshade eyeshade-worker ./bin/migrate-up.sh",
    "docker-migrate-up": "npm run docker-migrate-eyeshade-up && npm run docker-seed-eyeshade && npm run docker-up-pg-grants && npm run docker-up-pg-challenge",
    "docker-migrate-down": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml run --rm -w /usr/src/app/eyeshade eyeshade-worker ./bin/migrate-down.sh",
    "docker-migrate-down-all": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml run --rm -w /usr/src/app/eyeshade eyeshade-worker bash ./bin/migrate-down-all.sh",
    "docker-log-detached": "docker-compose logs",
    "postinstall": "test -e .git && { for file in `ls .git-hooks`; do ln -sf ../../.git-hooks/${file} .git/hooks/${file}; done } || true"
  },
  "config": {
    "dockermonitors": "prometheus grafana",
    "dockerservices": "balance-web ledger-web ledger-worker eyeshade-web eyeshade-worker eyeshade-consumer grant-web redeemer-web"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/brave-intl/bat-ledger.git"
  },
  "author": "Brave Developers <support@brave.com>",
  "license": "MPL-2.0",
  "bugs": {
    "url": "https://github.com/brave-intl/bat-ledger/issues"
  },
  "homepage": "https://github.com/brave-intl/bat-ledger",
  "dependencies": {
    "@babel/cli": "^7.6.2",
    "@babel/node": "^7.6.2",
    "@hapi/bell": "^11.1.0",
    "@hapi/cookie": "^10.1.2",
    "@hapi/hapi": "^18.4.1",
    "@hapi/inert": "^5.2.2",
    "@hapi/joi": "^16.1.8",
    "@hapi/vision": "^5.5.4",
    "@octokit/rest": "^16.30.2",
    "@sentry/node": "^5.7.1",
    "@uphold/uphold-sdk-javascript": "github:brave-intl/uphold-sdk-javascript#bump-lodash-merge",
    "accept-language-parser": "1.4.1",
    "avro-js": "1.9.1",
    "bat-publisher": "^2.0.24",
    "bat-utils": "file:./bat-utils",
    "bignumber.js": "^4.1.0",
    "bitcoinjs-lib": "^3.2.0",
    "bluebird": "3.5.0",
    "boom": "5.2.0",
    "bs58check": "^2.0.2",
    "bson": "1.0.5",
    "country-list": "1.1.0",
    "cron-parser": "2.4.1",
    "cryptiles": "4.1.2",
    "currency-codes": "1.1.2",
    "dotenv": "^4.0.0",
    "epimetheus": "1.0.55",
    "ethereum-address": "0.0.4",
    "exposition": "^1.2.0",
    "gridfs-stream": "1.1.1",
    "hapi-auth-bearer-token": "^6.1.1",
    "hapi-require-https": "^4.0.0",
    "hapi-swagger": "^11.0.1",
    "http-request-signature": "0.0.2",
    "inert": "^4.2.1",
    "lodash": "^4.17.15",
    "moment": "^2.22.1",
    "mongodb": "^3.3.3",
    "monk": "^7.1.1",
    "monotonic-timestamp": "0.0.9",
    "netmask": "1.0.6",
    "newrelic": "^4.1.1",
    "node-anonize2-relic": "github:brave/node-anonize2-relic#388f15c6e5acb12336765713351817dfbee80129",
    "node-slack": "0.0.7",
    "nyc": "^14.1.1",
    "pg": "^7.12.1",
    "prom-client": "11.5.3",
    "proxy-agent": "^2.3.1",
    "rate-limiter-flexible": "^1.1.2",
    "redis": "^2.8.0",
    "rsmq": "^0.8.2",
    "rsmq-worker": "^0.5.2",
    "sdebug": "^0.9.5",
    "sinek": "^7.30.1",
    "tldjs": "2.2.0",
    "tweetnacl": "^1.0.0",
    "underscore": "1.8.3",
    "uuid": "3.1.0",
    "validate-ip-node": "1.0.6",
    "wreck": "13.0.1"
  },
  "engines": {
    "node": "8.9.2",
    "npm": "5.10.0"
  },
  "devDependencies": {
    "ava": "^1.4.1",
    "babel-eslint": "^8.2.3",
    "coveralls": "^3.0.6",
    "eslint": "^6.4.0",
    "eslint-plugin-node": "^10.0.0",
    "parse-prometheus-text-format": "^1.1.1",
    "standard": "^12.0.1",
    "supertest": "^4.0.2"
  },
  "standard": {
    "ignore": [
      "config.js",
      "bat-utils/config/config.*"
    ],
    "parser": "babel-eslint"
  },
  "nyc": {
    "per-file": true,
    "all": true,
    "watermarks": {
      "lines": [
        90,
        100
      ],
      "functions": [
        90,
        100
      ],
      "branches": [
        90,
        100
      ],
      "statements": [
        90,
        100
      ]
    },
    "include": [
      "eyeshade/**/*.js",
      "ledger/**/*.js",
      "balance/**/*.js",
      "bat-utils/**/*.js"
    ],
    "reporter": [
      "lcov",
      "text-summary"
    ]
  }
}
